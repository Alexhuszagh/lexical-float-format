[metadata]
title = "C++ - Decimal String - {version} - {lang}"
literal = false
language = "cpp"
description = "C++ string decimal numbers. Does not support base prefixes."

# Non-Digit Separator Flags

[[floats]]
value = "0.1"
title = "Simple"
flags = ""
outcome = "pass"
expected = "0.1"

[[ints]]
value = "12"
title = "Simple"
flags = ""
outcome = "pass"
expected = "12"

[[floats]]
value = ".1"
title = "Required integer digits."
flags = "I/R"
outcome = "fail"
expected = "0.1"

[[floats]]
value = "1."
title = "Required fraction digits."
flags = "F/R"
outcome = "fail"
expected = "1.0"

[[floats]]
value = ["1.0e", "1e", "1.e"]
title = "Required exponent digits."
flags = "E/R"
outcome = "fail"
expected = ["1.0", "1.0", "1.0"]

[[floats]]
value = "."
title = "Required mantissa digits."
flags = "M/R"
outcome = "fail"
expected = "0.0"

[[floats]]
value = "+1.2"
title = "No mantissa positive sign."
flags = "+/M"
outcome = "fail"
expected = "1.2"

[[floats]]
value = "1.0"
title = "Required positive sign."
flags = "R/M"
outcome = "fail"
expected = "1.0"

[[floats]]
value = "1.0e3"
title = "No exponent notation."
flags = "e/e"
outcome = "fail"
expected = "1e3"

[[floats]]
value = "1.0e+3"
title = "No exponent positive sign."
flags = "+/E"
outcome = "fail"
expected = "1e3"

[[floats]]
value = "1.0e3"
title = "Required exponent sign."
flags = "R/E"
outcome = "fail"
expected = "1e3"

[[floats]]
value = "1e3"
title = "No exponent without fraction."
flags = "e/F"
outcome = "fail"
expected = "1e3"

[[floats]]
value = ["NAN", "INFINITY"]
title = "No special (non-finite) values."
flags = "S/S"
outcome = "fail"
expected = ["NAN", "INFINITY"]

[[floats]]
value = ["nan"]
title = "Case-sensitive special (non-finite) values."
flags = "S/C"
outcome = "fail"
expected = ["NAN"]

[[floats]]
value = "001.2"
title = "No float leading zeros."
flags = "N/F"
outcome = "fail"
expected = "1.2"

[[floats]]
value = "1.2"
title = "Required exponent notation."
flags = "R/e"
outcome = "fail"
expected = "1.2"

[[floats]]
value = "1.0E3"
title = "Case-sensitive exponent character."
flags = "e/C"
outcome = "fail"
expected = "1e3"

[[floats]]
value = ".1E3"
title = "Require integer digits with exponent."
flags = "I/E"
outcome = "fail"
expected = "1e2"

[[floats]]
value = "1.E3"
title = "Require fraction digits with exponent."
flags = "F/E"
outcome = "fail"
expected = "1e3"

[[floats]]
value = "0d1.2"
title = "Require base prefixes."
flags = "r/P"
outcome = "pass"
expected = "1.2"

[[floats]]
value = "1.2d"
title = "Require base suffixes."
flags = "r/S"
outcome = "pass"
expected = "1.2"

[[floats]]
value = ".e3"
title = "Require mantissa digits with exponent."
flags = "M/E"
outcome = "fail"
expected = "0"

# Digit Separator Flags

[[floats]]
value = "1'1.11e11"
title = "Integer internal digit separator."
flags = "I/I"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.1'1e11"
title = "Fraction internal digit separator."
flags = "F/I"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.11e1'1"
title = "Exponent internal digit separator."
flags = "E/I"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "-'11.11e11"
title = "Integer leading digit separator."
flags = "I/L"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.'11e11"
title = "Fraction leading digit separator."
flags = "F/L"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.11e'11"
title = "Exponent leading digit separator."
flags = "E/L"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11'.11e11"
title = "Integer trailing digit separator."
flags = "I/T"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.11'e11"
title = "Fraction trailing digit separator."
flags = "F/T"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.11e11'"
title = "Exponent trailing digit separator."
flags = "E/T"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "1''1.11e11"
title = "Integer consecutive digit separator."
flags = "I/C"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.1''1e11"
title = "Fraction consecutive digit separator."
flags = "F/C"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.11e1''1"
title = "Exponent consecutive digit separator."
flags = "E/C"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = ["N'a'N", "in'finity"]
title = "Special (non-finite) digit separator."
flags = "S/D"
outcome = "pass"
expected = ["NAN", "INFINITY"]

[[floats]]
value = "'11.11e11"
title = "Absolute start digit separator."
flags = "s/D"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "'-11.11e11"
title = "Integer sign digit separator."
flags = "I/s"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "''-11.11e11"
title = "Integer sign consecutive digit separator."
flags = "I/c"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.11e'-11"
title = "Exponent sign digit separator."
flags = "E/s"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "11.11e''-11"
title = "Exponent sign consecutive digit separator."
flags = "E/c"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "0'd11.11e11"
title = "Base prefix internal digit separator."
flags = "P/I"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "-'0d11.11e11"
title = "Base prefix leading digit separator."
flags = "P/L"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "0d'11.11e11"
title = "Base prefix trailing digit separator."
flags = "P/T"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "0d''11.11e11"
title = "Base prefix consecutive digit separator."
flags = "P/C"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "011.11e11d"
title = "Base suffix internal digit separator."
flags = "S/I"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "011.11e11'd"
title = "Base suffix leading digit separator."
flags = "S/L"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "011.11e11d'"
title = "Base suffix trailing digit separator."
flags = "S/T"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "011.11e11d''"
title = "Base suffix consecutive digit separator."
flags = "S/C"
outcome = "pass"
expected = "11.11e11"

[[floats]]
value = "-1.0"
title = "No mantissa positive or negative sign."
flags = "-/M"
outcome = "fail"
expected = "-1.0"

[[floats]]
value = "1.0e-3"
title = "No exponent positive or negative sign."
flags = "-/E"
outcome = "fail"
expected = "1.0e-3"

# Integers

# NOTE: C has Octal literals with leading `0`, so we force this to fail.
[[ints]]
value = "0012"
title = "No integer leading zeros."
flags = "N/I"
outcome = "fail"
expected = "12"

[[ints]]
value = "0D12"
title = "Case-sensitive base prefix."
flags = "e/P"
outcome = "pass"
expected = "12"

[[ints]]
value = "12D"
title = "Case-sensitive base suffix."
flags = "e/S"
outcome = "pass"
expected = "12"

[[ints]]
value = "-1"
title = "No mantissa positive or negative sign."
flags = "-/M"
outcome = "fail"
expected = "-1"

[[uints]]
value = "-0"
title = "No unsigned integer negative sign."
flags = "-/U"
outcome = "fail"
expected = "0"
